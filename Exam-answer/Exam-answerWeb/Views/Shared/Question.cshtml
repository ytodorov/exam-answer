@model QuestionViewModel
@{
    var configuration = ViewContext.HttpContext.RequestServices.GetService<IConfiguration>();

    var pageBaseCanonicalUrl = configuration.GetValue(typeof(string), "PageBaseCanonicalUrl")?.ToString();

    int questionNumber = Model.Exam.Questions.IndexOf(Model) + 1;

    for (int i = 0; i < Model.Contents.Count; i++)
    {
        var content = Model.Contents[i];
    }

    for (int i = 0; i < Model.Explanations.Count; i++)
    {
        var explanation = Model.Explanations[i];
    }

    //var similarQuestions = HelperMethods.GetSimilarQuestions(Model, Model.Exam);
}
<h1><a href="@pageBaseCanonicalUrl">Home</a> / <a href="@Model.Exam.ExamProviderUrl">@Model.Exam.Provider</a> / <a href="@Model.Exam.ExamUrl"> @Model.Exam.Code</a> / <a href="@(Model.Exam.ExamUrl + "/question" + questionNumber)"> Question @(questionNumber)</a></h1>
<partial name="_PrevNextPartial" />
<amp-accordion disable-session-states>
    <section expanded>
        <h2>Question @(questionNumber)<i class="fa fa-chevron-down"></i></h2>
        <div class="m1">
            <div>
                @{
                    var lastContent = Model.Contents.ToList();
                }
                @foreach (var content in lastContent)
                {
                    <h3>
                        @{
                            var lines2 = content.Text.Split(Environment.NewLine);
                        }
                        @for (int i = 0; i < lines2.Length; i++)
                        {
                            var line = lines2[i].Replace("Constants.PaddingChar.ToString()", "&nbsp;");

                            if (line.EndsWith(".png", StringComparison.InvariantCultureIgnoreCase))
                            {
                                <amp-img alt="@($"{Model.Exam.Provider} {Model.Exam.Code} question{questionNumber}")"
                                         src="@(Html.ViewContext.HttpContext.GetPngSize(line).RelativePathFromWwwRoot)"
                                         width="@(Html.ViewContext.HttpContext.GetPngSize(line).Size.Width)"
                                         height="@(Html.ViewContext.HttpContext.GetPngSize(line).Size.Height)"
                                         layout="intrinsic">
                                </amp-img>
                            }
                            else
                            {
                                <p>
                                    @Html.Raw(line)
                                </p>
                            }
                        }
                    </h3>
                }
            </div>
        </div>
    </section>
    <section expanded>
        <h2>Answers<i class="fa fa-chevron-down"></i></h2>
        <div class="m1">
            <div>
                @{
                    string correctId = $"correct{Html.GetNextId()}";
                }
                @if (Model.QuestionType == QuestionType.CheckBox)
                {

                    <ul class="fieldlist">
                        @foreach (var answer in Model.Answers)
                        {

                            if (answer.IsCorrect == true)
                            {
                                <li class="correct">
                                    <h3>
                                        <input type="checkbox" id="@(Html.GetNextId())" class="k-checkbox">
                                        <label class="k-checkbox-label" for="@(Html.GetNextId(true))" [class]="toggleVariable@(questionNumber) + ' k-checkbox-label'">
                                            @(answer.Text)
                                        </label>
                                    </h3>
                                </li>
                            }
                            else
                            {
                                <li>
                                    <h3>
                                        <input type="checkbox" id="@(Html.GetNextId())" class="k-checkbox">
                                        <label class="k-checkbox-label" for="@(Html.GetNextId(true))">

                                            @(answer.Text)
                                        </label>
                                    </h3>
                                </li>
                            }
                        }
                    </ul>
                }
                @if (Model.QuestionType == QuestionType.RadioButon)
                {
                    <ul class="fieldlist">
                        @foreach (var answer in Model.Answers)
                        {
                            if (answer.IsCorrect == true)
                            {
                                <li class="correct">
                                    <h3>
                                        <input type="radio" name="group" id="@(Html.GetNextId())" class="k-radio">
                                        <label class="k-radio-label" for="@(Html.GetNextId(true))" [class]="toggleVariable@(questionNumber) + ' k-radio-label'">
                                            @(Html.Raw(answer.Text))
                                        </label>
                                    </h3>
                                </li>
                            }
                            else
                            {
                                <li>
                                    <h3>
                                        <input type="radio" name="group" id="@(Html.GetNextId())" class="k-radio">
                                        <label class="k-radio-label" for="@(Html.GetNextId(true))">
                                            @(Html.Raw(answer.Text))
                                        </label>
                                    </h3>
                                </li>
                            }
                        }
                    </ul>
                }
                @if (Model.QuestionType == QuestionType.DropDown)
                {
                    @foreach (var answer in Model.Answers)
                    {
                        <p>
                            @{
                                var dropdDownValues = answer.Text.Split(";", StringSplitOptions.RemoveEmptyEntries).ToList();
                                var labelText = dropdDownValues.FirstOrDefault();
                            }
                            <label for="@(Html.GetNextId())">@labelText</label>
                            <select id="@(Html.GetNextId(true))" name="@(Html.GetNextId(true))">
                                <option value="Select your option">Select your option:</option>
                                @foreach (var drValue in dropdDownValues.Skip(1))
                                {
                                    @if (drValue.Trim().EndsWith("*", StringComparison.InvariantCultureIgnoreCase))
                                    {
                                        <option [selected]="toggleVariable@(questionNumber) == 'green'" [class]="toggleVariable@(questionNumber)" value="@drValue.Replace("*", string.Empty).Trim()">@drValue.Replace("*", string.Empty).Trim()</option>
                                    }
                                    else
                                    {
                                        <option value="@drValue">@drValue</option>
                                    }
                                }
                            </select>
                        </p>
                    }
                }
                <br />
                <div class="center">
                    <input type="checkbox" id="@(Html.GetNextId())" class="k-checkbox" on="change: AMP.setState({ toggleVariable@(questionNumber): event.checked ? 'green' : ''})">
                    <label class="k-checkbox-label" for="@(Html.GetNextId(true))">
                        Show correct answer
                    </label>
                </div>
            </div>
        </div>
    </section>
    @if (Model.ShowAdsInQuestion.GetValueOrDefault())
    {
        @if (Model?.Explanations?.Count > 0 || Model.References?.Count > 0)
        {
<section expanded>
    <h2>Advertisement<i class="fa fa-chevron-down"></i></h2>
    <div class="center m2">
            <div class="center inline">
                @Html.Raw(Html.GetAddsenseAdd(AdsenseType.Fixed_300_250, Model.ShowAdsInQuestion.GetValueOrDefault()))
            </div>
            <div class="center inline">
                @Html.Raw(Html.GetAddsenseAdd(AdsenseType.Fixed_300_250, Model.ShowAdsInQuestion.GetValueOrDefault()))
            </div>
        </div>
    @*<div class="center">
        @Html.Raw(Html.GetAddsenseAdd(AdsenseType.ResponsiveAdHorizontal))
    </div>*@
</section>
        }
    }
    @if (Model?.Explanations?.Count > 0)
    {
        <section>
            <h2>Explanation<i class="fa fa-chevron-down"></i></h2>
            <div class="m1">
                <div>
                    @if (Model.Explanations?.Count > 0)
                    {

                        @foreach (var explanation in Model.Explanations)
                        {
                            if (explanation.Text.Trim().EndsWith(".png", StringComparison.InvariantCultureIgnoreCase))
                            {
                                <amp-img alt="@($"{Model.Exam.Provider} {Model.Exam.Code} question{questionNumber} explanation")"
                                         src="@(Html.ViewContext.HttpContext.GetPngSize(explanation.Text).RelativePathFromWwwRoot)"
                                         width="@(Html.ViewContext.HttpContext.GetPngSize(explanation.Text).Size.Width)"
                                         height="@(Html.ViewContext.HttpContext.GetPngSize(explanation.Text).Size.Height)"
                                         layout="intrinsic">
                                </amp-img>
                            }
                            else
                            {
                                <p>
                                    @explanation.Text
                                </p>
                            }
                        }
                    }
                </div>
            </div>
        </section>
    }
    @if (Model.References?.Count > 0)
    {
        <section>
            <h2>References<i class="fa fa-chevron-down"></i></h2>
            <div class="m1">
                <div>
                    @if (Model.References?.Count > 0)
                    {
                        @foreach (var reference in Model.References)
                        {
                            <p>
                                <a href="@reference.Url" target="_blank" rel="noopener">@(!string.IsNullOrWhiteSpace(reference.Text) ? reference.Text : reference.Url)</a>
                            </p>
                        }
                    }
                </div>
            </div>
        </section>
    }
    <section>
        <h2>Comments<i class="fa fa-chevron-down"></i></h2>
        <div class="m1">
            <amp-iframe width=600 height=140
                        layout="responsive"
                        sandbox="allow-scripts allow-same-origin allow-modals allow-popups allow-forms"
                        resizable
                        src="https://ytodorov.azurewebsites.net/disqus?canonicalUrl=@Model?.PageCanonicalUrl">
                <div overflow
                     tabindex=0
                     role=button
                     aria-label="Load more"
                     class="iframedisqus">
                    Load more
                </div>
            </amp-iframe>
        </div>
    </section>
    @*@if (similarQuestions?.Count > 0)
    {
<section expanded>
    <h2>Similar questions</h2>
    <div class="m1">
        <div>
            @foreach (var similarQuestion in similarQuestions)
            {
            <p>
                <a href="@(Model.Exam.ExamUrl + "/question" + (Model.Exam.Questions.IndexOf(similarQuestion) + 1))">Question @(Model.Exam.Questions.IndexOf(similarQuestion) + 1): @(similarQuestion.ContentText)</a>
            </p>
            }
        </div>
    </div>
</section>
    }*@
</amp-accordion>
<partial name="_PrevNextPartial" />
<hr />
<script type="application/ld+json">
    {
    "@@context": "https://schema.org",
    "@@type": "BreadcrumbList",
    "itemListElement": [{
    "@@type": "ListItem",
    "position": 1,
    "name": "@Model?.Exam?.Provider?.ToLowerInvariant()",
    "item": "@($"{pageBaseCanonicalUrl}/{Model?.Exam?.Provider?.ToLowerInvariant()}")"
    },{
    "@@type": "ListItem",
    "position": 2,
    "name": "@Model?.Exam?.Code?.ToLowerInvariant()",
    "item": "@($"{pageBaseCanonicalUrl}/{Model?.Exam?.Provider?.ToLowerInvariant()}/{Model?.Exam?.Code?.ToLowerInvariant()}")"
    },{
    "@@type": "ListItem",
    "position": 3,
    "name": "@($"question {questionNumber}")",
    "item": "@($"{pageBaseCanonicalUrl}/{Model?.Exam?.Provider?.ToLowerInvariant()}/{Model?.Exam?.Code?.ToLowerInvariant()}/question{questionNumber}")"
    }]
    }
</script>

